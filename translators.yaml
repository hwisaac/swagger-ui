swagger: '2.0'
info:
  title: API Documentation
  description: 'translators.co.kr : API documentation'
  version: v1
host: 127.0.0.1:8000
schemes:
- http
basePath: /api
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    description: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNzIzNTI4ODcxLCJleHAiOjE3NTUwNjQ4NzF9.-QfiOUVzzLq5Eajw-fSxXBLtjoo5Eank0MTR6M_lcIY
    in: header
security:
- Bearer: []
paths:
  /barun/:
    get:
      operationId: get_barun
      summary: 홈페이지 기본 설정 정보 조회
      description: "용도: 웹사이트 푸터에 표시되는 회사에 대한 기본 정보(주소,이메일,폰번호 등)와 승인 코드 등의 정보를 조회합니다.
        \n 데이터는 하나만 존재합니다. \n django 관리자페이지를 통해 수정할 수 있습니다."
      parameters: []
      responses:
        '200':
          description: 성공적으로 조회된 회사 기본 정보
          schema:
            $ref: '#/definitions/BarunInformations'
        '404':
          description: 정보를 찾을 수 없습니다.
          schema:
            type: object
            properties:
              error:
                description: 데이터를 찾을 수 없는 경우
                type: string
      tags:
      - barun
      security: []
    parameters: []
  /barun/participation-guide/qna/:
    get:
      operationId: get_participation_guide_qnas
      summary: 번역가 참가 안내에 대한 QNA 목록 조회
      description: '용도: 웹사이트 /participation-guide 에서 보여지는 QNA 데이터를 조회합니다.'
      parameters: []
      responses:
        '200':
          description: 성공
          schema:
            type: array
            items:
              $ref: '#/definitions/TranslationApplicantQNA'
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                description: 오류 메시지
                type: string
            example:
              error: Internal server error
      tags:
      - barun
      security: []
    parameters: []
  /barun/request/qna/:
    get:
      operationId: get_request_guide_qnas
      summary: 번역의뢰에 대한 QNA 목록 조회
      description: '용도: 웹사이트 /request/qna 에서 보여지는 QNA 데이터를 조회합니다.'
      parameters: []
      responses:
        '200':
          description: 성공
          schema:
            type: array
            items:
              $ref: '#/definitions/TranslationRequestQNA'
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                description: 오류 메시지
                type: string
            example:
              error: Internal server error
      tags:
      - barun
      security: []
    parameters: []
  /comments/migrate/:
    post:
      operationId: post_migrate_comment
      summary: 기존 사이트의 DB의 댓글들을 migrate 할 때 사용
      description: |-
        기존 translators.co.kr 사이트의 댓글 데이터를 django 를 통해 migrate 를 할 때 사용하는 API
         * 웹사이트에서는 사용되지 않음
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - task_title
          - username
          type: object
          properties:
            task_title:
              description: 댓글이 달릴 수주 게시물의 제목 (제목에 해당하는 게시물이 존재하고 있어야 합니다.)
              type: string
            status:
              description: applying | sample_translator | assigned_translator | assigned_to_other
                | completed 중 하나
              type: string
            username:
              description: 댓글 작성자(이미 존재하고 있어야 합니다)
              type: string
            content:
              description: '댓글 내용 '
              type: string
              default: <지원합니다
          example:
            task_title: Sample Task
            status: applying
            username: user123
            content: <지원합니다>
      responses:
        '201':
          description: 댓글이 성공적으로 생성되었습니다.
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: 잘못된 요청 데이터 또는 유효성 검사 실패
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: 'User/Task not found '
      tags:
      - comments
      security: []
    parameters: []
  /comments/{comment_pk}/:
    get:
      operationId: comments_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - comments
    put:
      operationId: comments_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - comments
    delete:
      operationId: comments_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - comments
    parameters:
    - name: comment_pk
      in: path
      required: true
      type: string
  /comments/{comment_pk}/reply/:
    get:
      operationId: comments_reply_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - comments
    post:
      operationId: comments_reply_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - comments
    parameters:
    - name: comment_pk
      in: path
      required: true
      type: string
  /comments/{comment_pk}/reply/{reply_pk}/:
    put:
      operationId: comments_reply_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - comments
    delete:
      operationId: comments_reply_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - comments
    parameters:
    - name: comment_pk
      in: path
      required: true
      type: string
    - name: reply_pk
      in: path
      required: true
      type: string
  /comments/{comment_pk}/status/:
    put:
      operationId: comments_status_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - comments
    parameters:
    - name: comment_pk
      in: path
      required: true
      type: string
  /gmail/:
    post:
      operationId: gmail_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - gmail
    delete:
      operationId: gmail_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - gmail
    parameters: []
  /init/:
    get:
      operationId: init_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - init
    parameters: []
  /loadtest/comment/:
    post:
      operationId: loadtest_comment_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - loadtest
    parameters: []
  /loadtest/login/:
    post:
      operationId: loadtest_login_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - loadtest
    parameters: []
  /loadtest/tasks/:
    get:
      operationId: loadtest_tasks_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - loadtest
    parameters: []
  /new-books/:
    get:
      operationId: new-books_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - new-books
    post:
      operationId: new-books_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - new-books
    parameters: []
  /new-books/{id}/:
    get:
      operationId: new-books_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - new-books
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /notices/:
    get:
      operationId: notices_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      tags:
      - notices
    parameters: []
  /notices/admin/:
    get:
      operationId: notices_admin_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      tags:
      - notices
    post:
      operationId: notices_admin_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      tags:
      - notices
    parameters: []
  /notices/admin/{id}/:
    get:
      operationId: notices_admin_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - notices
    put:
      operationId: notices_admin_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - notices
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /notices/{id}/:
    get:
      operationId: notices_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - notices
    put:
      operationId: notices_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - notices
    delete:
      operationId: notices_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - notices
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /popups/:
    get:
      operationId: popups_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - popups
    parameters: []
  /tasks/:
    get:
      operationId: tasks_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - tasks
    post:
      operationId: tasks_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - tasks
    parameters: []
  /tasks/admin/:
    get:
      operationId: tasks_admin_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - tasks
    parameters: []
  /tasks/admin/{id}/:
    get:
      operationId: tasks_admin_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - tasks
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /tasks/all/:
    get:
      operationId: tasks_all_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - tasks
    parameters: []
  /tasks/{id}/:
    get:
      operationId: tasks_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - tasks
    put:
      operationId: tasks_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - tasks
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /tasks/{id}/comments/:
    get:
      operationId: tasks_comments_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - tasks
    post:
      operationId: tasks_comments_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - tasks
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /tasks/{task_id}/assign-translator/{user_id}/:
    post:
      operationId: tasks_assign-translator_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - tasks
    parameters:
    - name: task_id
      in: path
      required: true
      type: string
    - name: user_id
      in: path
      required: true
      type: string
  /users/:
    get:
      operationId: users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    post:
      operationId: users_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - users
    parameters: []
  /users/additional-information/:
    put:
      operationId: users_additional-information_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/admin/:
    get:
      operationId: users_admin_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/check-boxes/:
    get:
      operationId: users_check-boxes_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/editor-signup/:
    post:
      operationId: users_editor-signup_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - users
    parameters: []
  /users/find-id/:
    post:
      operationId: users_find-id_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - users
    parameters: []
  /users/find-password/:
    post:
      operationId: users_find-password_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - users
    parameters: []
  /users/interview-questions/:
    get:
      operationId: users_interview-questions_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/login/:
    post:
      operationId: users_login_create
      summary: JWT 로그인
      description: 사용자 로그인 API, username과 password를 통해 인증하면 JWT 토큰을 반환받습니다.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - username
          - password
          type: object
          properties:
            username:
              description: 사용자 이름
              type: string
            password:
              description: 사용자 비밀번호
              type: string
          example:
            username: admin
            password: admin
      responses:
        '202':
          description: 성공적으로 로그인 되었을 때 JWT 토큰 반환
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  name:
                    type: string
                  pen_name:
                    type: string
                  birth_date:
                    type: string
                  gender:
                    type: string
                  subscribed:
                    type: string
                  kakao_id:
                    type: string
                  languages:
                    type: string
                  styles:
                    type: string
                  phone:
                    type: string
                  tags:
                    type: string
                  specializations:
                    type: string
                  major_works:
                    type: string
                  biography:
                    type: string
                  works:
                    type: string
                  is_public:
                    type: boolean
                  zonecode:
                    type: string
                  address1:
                    type: string
                  address2:
                    type: string
                  is_domestic:
                    type: boolean
                  is_staff:
                    type: boolean
                  is_translator:
                    type: boolean
                  photo:
                    type: string
              token:
                type: string
        '400':
          description: 잘못된 요청 데이터
          schema:
            type: object
            properties:
              error:
                type: string
        '401':
          description: 인증 실패
          schema:
            type: object
            properties:
              error:
                type: string
      tags:
      - users
    parameters: []
  /users/me/:
    get:
      operationId: users_me_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    put:
      operationId: users_me_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/me/change-password/:
    put:
      operationId: users_me_change-password_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/me/my-tasks-history/:
    get:
      operationId: users_me_my-tasks-history_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/me/my-tasks/:
    get:
      operationId: users_me_my-tasks_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/search/:
    get:
      operationId: users_search_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
  /users/{id}/:
    get:
      operationId: users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    delete:
      operationId: users_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - users
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /users/{id}/tags/:
    get:
      operationId: users_tags_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    post:
      operationId: users_tags_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - users
    put:
      operationId: users_tags_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    delete:
      operationId: users_tags_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - users
    parameters:
    - name: id
      in: path
      required: true
      type: string
definitions:
  BarunInformations:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      barun_address:
        title: Barun address
        type: string
        maxLength: 200
      barun_fax:
        title: Barun fax
        type: string
        maxLength: 15
      barun_phone:
        title: Barun phone
        type: string
        maxLength: 15
      barun_email:
        title: Barun email
        type: string
        format: email
        maxLength: 254
      approval_code:
        title: Approval code
        type: string
        maxLength: 10
  TranslationApplicantQNA:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      question:
        title: Question
        type: string
        minLength: 1
      answer:
        title: Answer
        type: string
        minLength: 1
  TranslationRequestQNA:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      question:
        title: Question
        type: string
        minLength: 1
      answer:
        title: Answer
        type: string
        minLength: 1
  Comment:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      content:
        title: Content
        type: string
        minLength: 1
      status:
        title: Status
        type: string
        enum:
        - applying
        - sample_translator
        - assigned_translator
        - assigned_to_other
        - completed
      author:
        title: Author
        type: string
        readOnly: true
      author_id:
        title: Author id
        type: string
        readOnly: true
      name:
        title: Name
        type: string
        readOnly: true
      replies:
        title: Replies
        type: string
        readOnly: true
      task:
        title: Task
        type: integer
        x-nullable: true
